name: 'Daily Perf Improver Build Steps'
description: 'Build ONNX Runtime with performance testing and benchmarking capabilities'

inputs:
  build-config:
    description: 'Build configuration (Release, Debug, RelWithDebInfo)'
    default: 'Release'
  enable-cuda:
    description: 'Enable CUDA execution provider'
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        python -m pip install cmake ninja numpy
        echo "Installing Python dependencies for performance testing" >> build-steps.log

    - name: Setup build environment
      shell: bash
      run: |
        echo "Setting up ONNX Runtime build environment" | tee -a build-steps.log
        echo "Current directory: $(pwd)" | tee -a build-steps.log
        echo "Python version: $(python --version)" | tee -a build-steps.log
        echo "CMake version: $(cmake --version)" | tee -a build-steps.log
        
    - name: Build ONNX Runtime with benchmarks
      shell: bash
      run: |
        # Build command based on research of CI workflows
        EXTRA_ARGS=""
        if [ "${{ inputs.enable-cuda }}" = "true" ]; then
          EXTRA_ARGS="--use_cuda"
          echo "Building with CUDA support" | tee -a build-steps.log
        else
          echo "Building CPU-only version" | tee -a build-steps.log
        fi
        
        # Core build with benchmarks enabled for performance testing
        echo "Starting build with micro-benchmarks enabled..." | tee -a build-steps.log
        ./build.sh \
          --config ${{ inputs.build-config }} \
          --build_micro_benchmarks \
          --cmake_extra_defines onnxruntime_BUILD_BENCHMARKS=ON \
          --parallel \
          $EXTRA_ARGS 2>&1 | tee -a build-steps.log
        
        echo "Build completed" | tee -a build-steps.log

    - name: Verify build artifacts
      shell: bash
      run: |
        BUILD_DIR="build/Linux"
        echo "Checking build artifacts in $BUILD_DIR/${{ inputs.build-config }}/" | tee -a build-steps.log
        
        # Check if main ONNX Runtime library exists
        if [ -f "$BUILD_DIR/${{ inputs.build-config }}/libonnxruntime.so" ]; then
          echo "✓ libonnxruntime.so found" | tee -a build-steps.log
        else
          echo "✗ libonnxruntime.so not found" | tee -a build-steps.log
        fi
        
        # Check if performance test binary exists
        if [ -f "$BUILD_DIR/${{ inputs.build-config }}/onnxruntime_perf_test" ]; then
          echo "✓ onnxruntime_perf_test found" | tee -a build-steps.log
        else
          echo "✗ onnxruntime_perf_test not found" | tee -a build-steps.log
        fi
        
        # Check if benchmark binary exists
        if [ -f "$BUILD_DIR/${{ inputs.build-config }}/onnxruntime_benchmark_executable" ]; then
          echo "✓ onnxruntime_benchmark_executable found" | tee -a build-steps.log
        elif [ -f "$BUILD_DIR/${{ inputs.build-config }}/onnxruntime_benchmark" ]; then
          echo "✓ onnxruntime_benchmark found" | tee -a build-steps.log
        else
          echo "✗ Benchmark executable not found" | tee -a build-steps.log
        fi
        
        echo "Build verification complete" | tee -a build-steps.log

    - name: Setup performance testing environment
      shell: bash
      run: |
        echo "Setting up environment for performance testing and micro-benchmarking" | tee -a build-steps.log
        
        # Add build directory to PATH for easy access to perf tools
        BUILD_DIR="$(pwd)/build/Linux/${{ inputs.build-config }}"
        echo "$BUILD_DIR" >> $GITHUB_PATH
        
        # Set environment variables for performance testing
        echo "ORT_BUILD_DIR=$BUILD_DIR" >> $GITHUB_ENV
        echo "ORT_CONFIG=${{ inputs.build-config }}" >> $GITHUB_ENV
        
        echo "Environment variables set:" | tee -a build-steps.log
        echo "  ORT_BUILD_DIR=$BUILD_DIR" | tee -a build-steps.log
        echo "  ORT_CONFIG=${{ inputs.build-config }}" | tee -a build-steps.log
        
        # Create a quick test to ensure the build works
        if [ -f "$BUILD_DIR/onnxruntime_perf_test" ]; then
          echo "Performance test binary is ready" | tee -a build-steps.log
        else
          echo "Warning: Performance test binary not found" | tee -a build-steps.log
        fi

    - name: Install Python performance tools
      shell: bash
      run: |
        # Install Python packages needed for performance benchmarking
        echo "Installing Python performance tools..." | tee -a build-steps.log
        python -m pip install numpy onnx psutil 2>&1 | tee -a build-steps.log
        
        # Check if transformer benchmarking tools are available
        if [ -d "onnxruntime/python/tools/transformers" ]; then
          echo "✓ Transformer benchmarking tools found" | tee -a build-steps.log
        else
          echo "✗ Transformer benchmarking tools not found" | tee -a build-steps.log
        fi
        
        if [ -d "onnxruntime/python/tools/microbench" ]; then
          echo "✓ Microbench tools found" | tee -a build-steps.log
        else
          echo "✗ Microbench tools not found" | tee -a build-steps.log
        fi
        
        echo "Performance tools setup complete" | tee -a build-steps.log